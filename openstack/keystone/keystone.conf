[DEFAULT]
bind_host = {{ salt['pillar.get']('keystone:bind_host', '0.0.0.0') }}
public_port = {{ salt['pillar.get']('keystone:public_port', '5000') }}
admin_port = {{ salt['pillar.get']('keystone:admin_port', '35357') }}
admin_token = {{ salt['pillar.get']('keystone:admin_token', 'c195b883042b11f25916') }}
compute_port = {{ salt['pillar.get']('keystone:compute_port', '8774') }}
verbose = {{ salt['pillar.get']('keystone:verbose', 'True') }}
debug = {{ salt['pillar.get']('keystone:debug', 'True') }}
#log_config = ./etc/logging.conf.sample

# ================= Syslog Options ============================
# Send logs to syslog (/dev/log) instead of to file specified
# by `log-file`
use_syslog = {{ salt['pillar.get']('keystone:use_syslog', 'False') }}
log_file = {{ salt['pillar.get']('keystone:log_file', '/var/log/keystone/keystone.log') }}

# Facility to use. If unset defaults to LOG_USER.
# syslog_log_facility = LOG_LOCAL0

[sql]
connection = {{ salt['pillar.get']('keystone:sql:connection', 'mysql://keystone:keystone@localhost/keystone') }}
idle_timeout = {{ salt['pillar.get']('keystone:sql:idle_timeout', '200') }}

[ldap]
#url = ldap://localhost
#tree_dn = dc=example,dc=com
#user_tree_dn = ou=Users,dc=example,dc=com
#role_tree_dn = ou=Roles,dc=example,dc=com
#tenant_tree_dn = ou=Groups,dc=example,dc=com
#user = dc=Manager,dc=example,dc=com
#password = freeipa4all
#suffix = cn=example,cn=com

[identity]
driver = {{ salt['pillar.get']('keystone:identity:driver', 'keystone.identity.backends.sql.Identity') }}

[catalog]
driver = {{ salt['pillar.get']('keystone:catalog:driver', 'keystone.catalog.backends.sql.Catalog') }}
template_file = {{ salt['pillar.get']('keystone:catalog:template_file', '/etc/keystone/default_catalog.templates') }}

[token]
driver = {{ salt['pillar.get']('keystone:token:driver', 'keystone.token.backends.sql.Token') }}

# Amount of time a token should remain valid (in seconds)
expiration = {{ salt['pillar.get']('keystone:token:expiration', '86400') }}

[policy]
driver = {{ salt['pillar.get']('keystone:policy:driver', 'keystone.policy.backends.rules.Policy') }}

[ec2]
driver = {{ salt['pillar.get']('keystone:ec2:driver', 'keystone.contrib.ec2.backends.sql.Ec2') }}

[filter:debug]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_debug:paste.filter_factory', 'keystone.common.wsgi:Debug.factory') }}

[filter:token_auth]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_token_auth:paste.filter_factory', 'keystone.middleware:TokenAuthMiddleware.factory') }}

[filter:admin_token_auth]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_admin_token_auth', 'keystone.middleware:AdminTokenAuthMiddleware.factory') }}

[filter:xml_body]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_xml_body:paste.filter_factory', 'keystone.middleware:XmlBodyMiddleware.factory') }}

[filter:json_body]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_json_body:paste.filter_factory', 'keystone.middleware:JsonBodyMiddleware.factory') }}

[filter:crud_extension]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_crud_extension_paste.filter_factory', 'keystone.contrib.admin_crud:CrudExtension.factory') }}

[filter:ec2_extension]
paste.filter_factory = {{ salt['pillar.get']('keystone:filter_ec2_extension:paste.filter_factory', 'keystone.contrib.ec2:Ec2Extension.factory') }}

[app:public_service]
paste.app_factory = {{ salt['pillar.get']('keystone:app_public_service:paste.app_factory', 'keystone.service:public_app_factory') }}

[app:admin_service]
paste.app_factory = {{ salt['pillar.get']('keystone:app_admin_service:paste.app_factory', 'keystone.service:admin_app_factory') }}

[pipeline:public_api]
pipeline = {{ salt['pillar.get']('keystone:pipeline:public_api', 'token_auth admin_token_auth xml_body json_body debug ec2_extension public_service') }}

[pipeline:admin_api]
pipeline = {{ salt['pillar.get']('keystone:pipeline:admin_api', 'token_auth admin_token_auth xml_body json_body debug ec2_extension crud_extension admin_service') }}

[app:public_version_service]
paste.app_factory = {{ salt['pillar.get']('keystone:app_public_version_service:paste.app_factory', 'keystone.service:public_version_app_factory') }}

[app:admin_version_service]
paste.app_factory = {{ salt['pillar.get']('keystone:app_admin_version_service:paste.app_factory', 'keystone.service:admin_version_app_factory') }}

[pipeline:public_version_api]
pipeline = {{ salt['pillar.get']('keystone:pipeline:public_version_api', 'xml_body public_version_service') }}

[pipeline:admin_version_api]
pipeline = {{ salt['pillar.get']('keystone:pipeline:admin_version_ap', 'xml_body admin_version_service') }}

[composite:main]
use = egg:Paste#urlmap
/v2.0 = public_api
/ = public_version_api

[composite:admin]
use = egg:Paste#urlmap
/v2.0 = admin_api
/ = admin_version_api
